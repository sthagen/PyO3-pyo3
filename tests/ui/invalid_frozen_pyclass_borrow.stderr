error[E0271]: type mismatch resolving `<Foo as PyClass>::Frozen == False`
  --> tests/ui/invalid_frozen_pyclass_borrow.rs:10:33
   |
10 |     let borrow = foo.as_ref(py).borrow_mut();
   |                                 ^^^^^^^^^^ expected `False`, found `True`
   |
note: required by a bound in `pyo3::PyCell::<T>::borrow_mut`
  --> src/pycell.rs
   |
   |         T: PyClass<Frozen = False>,
   |                    ^^^^^^^^^^^^^^ required by this bound in `PyCell::<T>::borrow_mut`

error[E0271]: type mismatch resolving `<ImmutableChild as PyClass>::Frozen == False`
  --> tests/ui/invalid_frozen_pyclass_borrow.rs:20:35
   |
20 |     let borrow = child.as_ref(py).borrow_mut();
   |                                   ^^^^^^^^^^ expected `False`, found `True`
   |
note: required by a bound in `pyo3::PyCell::<T>::borrow_mut`
  --> src/pycell.rs
   |
   |         T: PyClass<Frozen = False>,
   |                    ^^^^^^^^^^^^^^ required by this bound in `PyCell::<T>::borrow_mut`

error[E0271]: type mismatch resolving `<MutableBase as PyClass>::Frozen == True`
  --> tests/ui/invalid_frozen_pyclass_borrow.rs:24:11
   |
24 |     class.get();
   |           ^^^ expected `True`, found `False`
   |
note: required by a bound in `pyo3::Py::<T>::get`
  --> src/instance.rs
   |
   |         T: PyClass<Frozen = True> + Sync,
   |                    ^^^^^^^^^^^^^ required by this bound in `Py::<T>::get`

error[E0271]: type mismatch resolving `<MutableBase as PyClass>::Frozen == True`
  --> tests/ui/invalid_frozen_pyclass_borrow.rs:28:11
   |
28 |     class.get();
   |           ^^^ expected `True`, found `False`
   |
note: required by a bound in `pyo3::PyCell::<T>::get`
  --> src/pycell.rs
   |
   |         T: PyClass<Frozen = True> + Sync,
   |                    ^^^^^^^^^^^^^ required by this bound in `PyCell::<T>::get`
