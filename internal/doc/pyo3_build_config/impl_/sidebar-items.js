initSidebarItems({"constant":[["ABI3_MAX_MINOR","Maximum Python version that can be used as minimum required Python version with abi3."],["MINIMUM_SUPPORTED_VERSION","Minimum Python version PyO3 supports."],["WINDOWS_ABI3_LIB_NAME",""]],"enum":[["BuildFlag",""],["PythonImplementation",""]],"fn":[["any_cross_compiling_env_vars_set",""],["cargo_env_var","Gets an environment variable owned by cargo."],["conda_env_interpreter",""],["cross_compiling","Detect whether we are cross compiling and return an assembled CrossCompileConfig if so."],["cross_compiling_from_cargo_env",""],["default_lib_name_unix",""],["default_lib_name_windows",""],["ends_with",""],["env_var","Gets an external environment variable, and registers the build script to rerun if the variable changes."],["find_all_sysconfigdata","Finds `_sysconfigdata*.py` files for detected Python interpreters."],["find_interpreter","Attempts to locate a python interpreter."],["find_sysconfigdata",""],["fixup_config_for_abi3","Lowers the configured version to the abi3 version, if set."],["get_abi3_version",""],["get_env_interpreter",""],["is_abi3",""],["is_cpython_lib_dir",""],["is_pypy_lib_dir",""],["load_cross_compile_config",""],["load_cross_compile_from_sysconfigdata","Find cross compilation information from sysconfigdata file"],["make_cross_compile_config","Generates an interpreter config suitable for cross-compilation."],["make_interpreter_config","Generates an interpreter config which will be hard-coded into the pyo3-build-config crate. Only used by `pyo3-build-config` build script."],["parse_script_output",""],["parse_sysconfigdata","Parse sysconfigdata file"],["run_python_script","Run a python script using the specified interpreter binary."],["search_lib_dir","recursive search for _sysconfigdata, returns all possibilities of sysconfigdata paths"],["starts_with",""],["venv_interpreter",""],["windows_hardcoded_cross_compile",""]],"struct":[["BuildFlags","A list of python interpreter compile-time preprocessor defines that we will pick up and pass to rustc via `--cfg=py_sys_config={varname}`; this allows using them conditional cfg attributes in the .rs files, so"],["CrossCompileConfig","Configuration needed by PyO3 to cross-compile for a target platform."],["InterpreterConfig","Configuration needed by PyO3 to build for the correct Python implementation."],["PythonVersion",""],["Sysconfigdata","Parsed data from Python sysconfigdata file"]]});